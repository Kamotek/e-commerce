worker_processes auto;

events {
    worker_connections 1024;
}

http {
    # Definicja grupy serwerów (upstream) dla każdego mikroserwisu.
    # NGINX będzie automatycznie rozkładał ruch (load-balancing) między
    # wszystkie dostępne instancje każdego serwisu.
    # Nazwy (np. auth_service_upstream) są dowolne.
    # Adresy (np. auth-service:8080) pochodzą z docker-compose.yml (nazwa_serwisu:port).

    upstream auth_service_upstream {
        server auth-service:8080;
    }

    upstream catalog_service_upstream {
        server catalog-service:8081;
    }

    upstream order_service_upstream {
        server order-service:8083;
    }

    upstream bff_service_upstream {
        server bff-service:8085;
    }

    # --- Główny serwer nasłuchujący na porcie 80 ---
    server {
        listen 80;

        # Przekierowujemy wszystkie zapytania, których ścieżka zaczyna się
        # od /api/ do naszego serwisu BFF, który jest główną bramą do logiki biznesowej.
        # Przykład: zapytanie do http://localhost/api/auth/login
        # trafi do NGINX, a ten przekaże je do bff-service.
        location /api/ {
            proxy_pass http://bff_service_upstream; # Przekaż do serwisu BFF

            # Dodatkowe nagłówki, które przekazują oryginalne informacje o żądaniu
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }
    }
}